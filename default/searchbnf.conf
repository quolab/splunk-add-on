# [searchbnf.conf](http://docs.splunk.com/Documentation/Splunk/latest/Admin/Searchbnfconf)
# KSCONF-NO-SORT


[quolab-types]
syntax = (case|resource|script|tag|timeline|text|user|group|subscription|connector|regulator|endpoint|autonomous-system|certificate|domain|email|envelope|file|function|hostname|import-table|ip-address|mutex|process|registry-key|url|wallet|export-table|malware|blob|ttp|organization|persona|region|tor-descriptor|transaction|yara-rule|attribute|text|interpreted-as|known-as|geodata|report)
description = Supported types recognized by QuoLab
example1 = hostname

[quolab-facets]
syntax = (cases|contributors|document.magic|commented|document|sources|producers|refcount|vault-stored|display|actions|endpoints|latest-internal-observation|tagged)
example1 = display

[quolab-facet-list]
syntax = (<quolab-facets>(,<quolab-facets>)*
example1 = display,documented

[quolabquery-command]
syntax = quolabquery (server=<string>)? ((type=<quolab-types> (value=<string>)?)|(query=<string>)) (limit=<int>)? (facets=<quolab-facet-list>)?
shortdesc = Query the catalog for a QuoLab server
description = Generate Splunk results from a query to the QuoLab catalog. \
    If multiple quolab server exist in your enviroment, they can be searched specifically by name by using the `server` option.\
    \
    In simiple query mode, the appropriate `class` (fact/sysfact/ref/...) will automatically selected from the specified given `type`.
example1 = | quolabquery type=tag
comment1 = Query all tags
example2 = | quolabquery query="{json:query, source: $src_ip$}"
comment2 = Custom catalog query with dynamic field substitution... (Maybe this is only for the quolablookup command?)
usage = public
category = generating
appears-in = 7.3
maintainer = splunkbase@kintyre.co
tags = query quolab
